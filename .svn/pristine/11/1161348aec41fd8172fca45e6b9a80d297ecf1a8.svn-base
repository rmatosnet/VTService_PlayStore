'use strict';

var util = {
    validator: {
        validarCPF: function (cpf) {
            cpf = cpf.replace(".", '').replace(".", '').replace("-", "");

            if (cpf === "00000000000" ||
                cpf === "11111111111" ||
                cpf === "22222222222" ||
                cpf === "33333333333" ||
                cpf === "44444444444" ||
                cpf === "55555555555" ||
                cpf === "66666666666" ||
                cpf === "77777777777" ||
                cpf === "88888888888" ||
                cpf === "99999999999")
                return false;

            var numeros, digitos, soma, i, resultado, digitosIguais;
            digitosIguais = 1;
            if (cpf.length < 11)
                return false;
            for (i = 0; i < cpf.length - 1; i++)
                if (cpf.charAt(i) !== cpf.charAt(i + 1)) {
                    digitosIguais = 0;
                    break;
                }
            if (!digitosIguais) {
                numeros = cpf.substring(0, 9);
                digitos = cpf.substring(9);
                soma = 0;
                for (i = 10; i > 1; i--)
                    soma += numeros.charAt(10 - i) * i;
                resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
                if (resultado !== digitos.charAt(0))
                    return true;
                numeros = cpf.substring(0, 10);
                soma = 0;
                for (i = 11; i > 1; i--)
                    soma += numeros.charAt(11 - i) * i;
                resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
                if (resultado !== digitos.charAt(1))
                    return true;
                return true;
            }
            else
                return true;
        },
        validarCNPJ: function (cnpj) {
            //cnpj = cnpj.replace(/[^\d]+/g, '');

            if (cnpj === '') return false;

            if (cnpj.length !== 14)
                return false;

            // Elimina CNPJs invalidos conhecidos
            if (cnpj === "00000000000000" ||
                cnpj === "11111111111111" ||
                cnpj === "22222222222222" ||
                cnpj === "33333333333333" ||
                cnpj === "44444444444444" ||
                cnpj === "55555555555555" ||
                cnpj === "66666666666666" ||
                cnpj === "77777777777777" ||
                cnpj === "88888888888888" ||
                cnpj === "99999999999999")
                return false;

            // Valida DVs
            var tamanho;
            tamanho = cnpj.length - 2;
            var numeros;
            numeros = cnpj.substring(0, tamanho);
            var digitos = cnpj.substring(tamanho);
            var soma;
            soma = 0;
            var pos;
            pos = tamanho - 7;
            var i;
            for (i = tamanho; i >= 1; i--) {
                soma += numeros.charAt(tamanho - i) * pos--;
                if (pos < 2)
                    pos = 9;
            }
            var resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado !== digitos.charAt(0))
                return false;

            tamanho = tamanho + 1;
            numeros = cnpj.substring(0, tamanho);
            soma = 0;
            pos = tamanho - 7;
            for (i = tamanho; i >= 1; i--) {
                soma += numeros.charAt(tamanho - i) * pos--;
                if (pos < 2)
                    pos = 9;
            }
            resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado !== digitos.charAt(1))
                return false;

            return true;
        },
        validarEmail: function (email) {
            // var exclude=/[^@-.w]|^[_@.-]|[._-]{2}|[@.]{2}|(@)[^@]*1/;
            // var check=/@[w-]+./;
            // var checkend=/.[a-zA-Z]{2,3}$/;
            // if(((email.search(exclude) != -1)||(email.search(check)) == -1)||(email.search(checkend) == -1)){return false;}
            // else {return true;}
        }
    },
    stringUtil: {
        removerAcentos: function (str) {
            var string = str;
            var mapaAcentosHex = {
                a: /[\xE0-\xE6]/g,
                A: /[\xC0-\xC6]/g,
                e: /[\xE8-\xEB]/g,
                E: /[\xC8-\xCB]/g,
                i: /[\xEC-\xEF]/g,
                I: /[\xCC-\xCF]/g,
                o: /[\xF2-\xF6]/g,
                O: /[\xD2-\xD6]/g,
                u: /[\xF9-\xFC]/g,
                U: /[\xD9-\xDC]/g,
                c: /\xE7/g,
                C: /\xC7/g,
                n: /\xF1/g,
                N: /\xD1/g
            };

            for (var letra in mapaAcentosHex) {
                var expressaoRegular = mapaAcentosHex[letra];
                string = string.replace(expressaoRegular, letra);
            }

            return string;
        },
        unformatCPF: function (cpf) {
            cpf = cpf.replace(".", "");
            cpf = cpf.replace(".", "");
            cpf = cpf.replace("-", "");
            return cpf;
        },
        formatCPF: function (cpf) {
            var cpf1parte = cpf.substring(0, 3);
            var cpf2parte = cpf.substring(3, 6);
            var cpf3parte = cpf.substring(6, 9);
            var cpfdigverificador = cpf.substring(9, 11);
            cpf = cpf1parte + (".") + cpf2parte + (".") + cpf3parte + ("-") + cpfdigverificador;
           
            return cpf;
        }
    },
    service: {
        consultarCartao: 'http://usuario.vtservice.com.br/api/v1/cards/research?cpf=',
        abrirChamado: 'http://dwebmidia.com.br/webservice/WSPrincipal.asmx/AbrirChamadoModel',
        abrirChamadoUrlCliente: 'http://usuario.vtservice.com.br/api/v1/cards/called',
        listarChamados: 'http://dwebmidia.com.br/webservice/WSPrincipal.asmx/ListaChamadosCpf?cpfuser=',
        listarchamadosVTservice:'http://usuario.vtservice.com.br/api/v1/cards/list_solicitations?cpf=',
        atualizarChamado: 'http://dwebmidia.com.br/webservice/WSPrincipal.asmx/AtualizarChamado',
        atualizarChamadoVTService: 'http://usuario.vtservice.com.br/api/v1/cards/solicitation_viewed?solicitacao_id='
  
    },
    data: {
        token: 'c4fe7e7314debd0a701b3f0ac7f0df07',
        tokenchamado: '1356040299f3b0b0f68a16ce609214f6',
        cards: [],
        chamados: [],
        chamadosVT:[],
    }
};

//apagar depois

//token=1356040299f3b0b0f68a16ce609214f6" "http://usuario.vtservice.com.br/api/v1/cards/research?cpf=431.411.448-77"


//abertura de chamado
//abrirchamado: function (e) {

//    if ($("select#tipoChamado").val() === "0" || parseInt($("select#tipoChamado").val()) === 0) {
//        alert("Por favor, selecione o tipo de servi�o.");
//        return false;
//    }

//    var chamado = {
//        numerocard: homeModel.details.numeroCartao,
//        desccard: homeModel.details.nomeCartao,
//        msg: homeModel.details.mensagem,
//        cpf: util.stringUtil.unformatCPF(homeModel.fields.cpf),
//        tipo: $("select#tipoChamado").val()
//    };

//    //chamado = JSON.stringify(chamado);

//    $.post(app.service.abrirChamado, chamado, function (data) {
//        if (data[0].Status === true) {
//            alert(data[0].Msg);
//        } else {
//            alert(data[0].Msg);
//        }
//    }).fail(function (error) {
//        alert(JSON.stringify(error));
//    });


//    return false;
//}

//Login

//$.ajax({
//    url: "http://usuario.vtservice.com.br/api/v1/cards/research?cpf=" + $cpf,
//    data: {}, // parametros de query strings
//    type: "GET",
//    beforeSend: function (xhr) {
//        xhr.setRequestHeader('Authorization', 'Token token=' + app.data.token);
//    },
//    success: function (response) {
//        console.log(response);
//        if (response == null || response == undefined) {
//            app.showMessage('CPF nao localizado.', 'info');
//            homeModel.fields.mensagem.set('mensagem','CPF nao localizado.');
//            setTimeout(function() {
//                homeModel.fields.mensagem.set('mensagem', '');
//            }, 300);
//            return false;
//        }

//        if (!validator.validate()) {
//            app.showMessage('Por favor, informe o CPF!', 'error');
//            return false;
//        }

//        if (self.homeModel.fields.cpf != undefined) {
//            if (!util.validator.validarCPF(self.homeModel.fields.cpf)) {
//                app.showMessage('CPF Invalido.', 'error');
//                return false;
//            }
//        }
//        Seta o valor recebido da api de cep para o campo observable
//        self.homeModel.fields.set('nome', response.nome);

//        var _cards = [];
//        response.cards.forEach(function (item) {
//            var nitem = util.stringUtil.removerAcentos(item.nome_item.toLowerCase());
//            if (nitem.indexOf('alimentacao') > -1)
//                item.imagem = "prod_alimentacao.png";
//            else if (nitem.indexOf('refeicao') > -1)
//                item.imagem = "cartao-refeicao.png";
//            else if (nitem.indexOf('legal') > -1)
//                item.imagem = "vale-transporte.png";
//            else if (nitem.indexOf('bom') > -1 || nitem.indexOf('cartao bom'))
//                item.imagem = "vale-transporte.png";

//            _cards.push(item);
//        });

//        app.data.cards.data(response.cards);
//        self.homeModel.cards.data(response.cards);
//        app.data.cards.sync();
//        self.homeModel.cards.sync();
//        self.homeModel.isVisible = true;
//         3: Bloqueio
//         2: segunda via
//         1: saldo -Somente para o cartao bom
//         0: Outros

//        Campo input : mensagem.
//        Com um botao de abrir chamado. 

//        dataSource.read();
//        $("#menu").show();

//        app.mobileApp.navigate('#components/home/cartoes.html');
//    }
//});


//abrir chamado
//var cpfusr = util.stringUtil.unformatCPF(homeModel.fields.cpf);
//var listaDeCartoes = [];
//$.getJSON(app.service.listarChamados + cpfusr, {}, function (response) {
//    if (response) {
//        console.log(response);
//        listaDeCartoes = response;

//        //Link Ref: http://www.w3schools.com/jsref/jsref_sort.asp
//        //Link ref2: http://www.egtry.com/javascript/array/sort
//        //Efetua o orderby descending
//        listaDeCartoes = listaDeCartoes.sort(function (a, b) { return (b.idchamado - a.idchamado) });

//        var chamadosNLidos = listaDeCartoes.filter(function (item) {
//            return item.lidocli === "N";
//        });

//        if (chamadosNLidos.length > 0)
//            $("#evtchamados").kendoMobileButton({ badge: chamadosNLidos.length });

//        app.data.chamados.data(listaDeCartoes);
//        app.data.chamados.sync();
//    }
//});